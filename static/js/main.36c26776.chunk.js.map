{"version":3,"sources":["util/toolType.ts","util/dispatcher/index.ts","context/index.ts","components/toolBar/tool/index.tsx","components/toolBar/shape/index.tsx","components/toolBar/thickSelector/index.tsx","components/toolBar/colorPanel/index.tsx","util/dispatcher/event.ts","components/toolBar/other/index.tsx","components/toolBar/index.tsx","util/tool/tool.ts","util/tool/pen.ts","util/tool/eraser.ts","util/tool/colorExtract.ts","util/tool/colorFill.ts","util/tool/shape.ts","util/snapshot/index.ts","components/canvas/index.tsx","App.tsx","index.tsx"],"names":["ToolType","ShapeToolType","ShapeOutlineType","LineWidthType","ColorType","DispatcherEvent","eventName","callbacks","this","callback","push","index","indexOf","splice","data","slice","forEach","Dispatcher","events","event","fire","registerCallback","unregisterCallback","length","ToolTypeContext","createContext","type","PEN","setType","ShapeTypeContext","LINE","ShapeOutlineContext","SOLID","LineWidthContext","THIN","ColorContext","mainColor","subColor","activeColor","MAIN","setColor","value","setActiveColor","DispatcherContext","dispatcher","selectedToolClass","ToolPanel","props","className","Consumer","title","onClick","src","ERASER","COLOR_FILL","COLOR_EXTRACT","shapes","img","RECT","CIRCLE","RHOMBUS","TRIANGLE","PENTAGON","SEXANGLE","ARROW_TOP","ARROW_RIGHT","ARROW_DOWN","ARROW_LEFT","FOUR_STAR","ShapePanel","toolTypeContex","useContext","shapeOutlineContext","map","shape","SHAPE","FormControl","variant","disabled","InputLabel","Select","onChange","target","label","MenuItem","DOTTED","thicks","MIDDLE","BOLD","MAXBOLD","ThickSelector","useState","open","setOpen","anchorEle","setAnchorEle","lineWidthContext","currentTarget","Popover","onClose","anchorEl","anchorOrigin","vertical","horizontal","thick","colors","activeColorTypeCls","ColorPanel","createColor","pickerColor","setPickerColor","colorContext","activeColorType","useEffect","hex","style","backgroundColor","SUB","color","hideTextfield","CLEAR_EVENT","REDO_EVENT","UNDO_EVENT","OtherOperator","dispatcherContext","dispatch","Toolbar","Divider","orientation","flexItem","getMousePos","canvas","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","getTouchPos","touches","pageX","offsetLeft","pageY","offsetTop","hexToRgb","result","exec","r","parseInt","g","b","a","updateImageData","origin","fillData","row","height","col","width","r1","g1","b1","a1","r2","g2","b2","a2","equalOrigin","equalFilling","Tool","lineWidthFactor","ctx","Pen","lineWidthBase","drawColorType","mouseDown","saveImageData","previousPos","pos","getImageData","lineWidth","strokeStyle","lineJoin","lineCap","beginPath","moveTo","c","d","quadraticCurveTo","stroke","closePath","imageData","colorRgb","putImageData","preventDefault","mousePos","operateStart","operateEnd","operateMove","cancelable","touchPos","Eraser","ColorExtract","p","componentToHex","toString","res","rgbToHex","getPixelColorOnCanvas","mousepos","matchColor","colorLayer","pixelPos","fillPixel","ColorFill","Color","startX","startY","fillColor","Math","round","pixelStack","canvasWidth","canvasHeight","startPos","startColor","newPos","pop","reachLeft","reachRight","efficentFloodFill","red","green","blue","touchpos","Shape","dashed","isMouseDown","mouseDownPos","isDashed","dashLineStyle","fillStyle","setLineDash","clearRect","vertexs","sx","sy","ex","ey","points","mx","my","offsetX","offsetY","getVertexs","ellipse","abs","PI","i","lineTo","undefined","Snapshot","imageData1","imageData2","Canvas","toolType","lineWidthType","shapeType","shapeOutlineType","tool","setTool","canvasRef","useRef","snapshot","current","clientHeight","clientWidth","getContext","fillRect","add","on","forward","back","window","addEventListener","canvasData","off","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","removeEventListener","ref","App","setToolType","setShapeType","setShapeOutlineType","setLineWidthType","setActiveColorType","setMainColor","setSubColor","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36c26776.chunk.js","sourcesContent":["/**\n * 工具类型\n */\nexport enum ToolType {\n    PEN, // 笔\n    COLOR_FILL, // 填充\n    TEXT, // 文字\n    COLOR_EXTRACT, // 颜色提取\n    ERASER, // 橡皮擦\n    MAGNIFYING, // 放大镜\n    SHAPE // 形状\n}\n\n/**\n * 形状类型\n */\nexport enum ShapeToolType {\n    /**直线 */\n    LINE,\n    /**矩形 */\n    RECT,\n    /**圆 */\n    CIRCLE,\n    /**菱形 */\n    RHOMBUS,\n    /**三角形 */\n    TRIANGLE,\n    /**五边形 */\n    PENTAGON,\n    /**六边形 */\n    SEXANGLE,\n    /**上箭头 */\n    ARROW_TOP,\n    /**右箭头 */\n    ARROW_RIGHT,\n    /**下箭头 */\n    ARROW_DOWN,\n    /**左箭头 */\n    ARROW_LEFT,\n    /**四角星 */\n    FOUR_STAR\n}\n\n/**\n * 形状轮廓类型\n */\nexport enum ShapeOutlineType {\n    /**实线 */\n    SOLID,\n    /**虚线 */\n    DOTTED\n}\n\n/**\n * 线宽\n */\nexport enum LineWidthType {\n    THIN,\n    MIDDLE,\n    BOLD,\n    MAXBOLD\n}\n\n/**\n * 当前选择的颜色：主、副\n */\nexport enum ColorType {\n    MAIN,\n    SUB\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * 自定义事件系统\n */\ntype CalllbackType = (...args: any[]) => any;\nclass DispatcherEvent {\n    public eventName: string;\n    public callbacks: CalllbackType[];\n    constructor(eventName: string) {\n        this.eventName = eventName;\n        this.callbacks = [];\n    }\n\n    registerCallback(callback: CalllbackType) {\n        this.callbacks.push(callback);\n    }\n\n    unregisterCallback(callback: CalllbackType) {\n        const index = this.callbacks.indexOf(callback);\n        if (index > -1) {\n            this.callbacks.splice(index, 1);\n        }\n    }\n\n    fire(data?: any) {\n        const callbacks = this.callbacks.slice(0);\n        callbacks.forEach((callback) => {\n            callback(data);\n        });\n    }\n}\n\nclass Dispatcher {\n    public events: {[props: string]: DispatcherEvent};\n    public constructor() {\n        this.events = {};\n    }\n\n    /**\n     * dispatcher a event\n     * @param eventName the name of event\n     * @param data the data pass to the callback(event listener)\n     */\n    public dispatch(eventName: string, data?: any) {\n        const event = this.events[eventName];\n        if (event) {\n            event.fire(data);\n        }\n    }\n\n    /**\n     * listen event\n     */\n    public on(eventName: string, callback: CalllbackType) {\n        let event = this.events[eventName];\n        if (!event) {\n            event = new DispatcherEvent(eventName);\n            this.events[eventName] = event;\n        }\n        event.registerCallback(callback);\n    }\n\n    /**\n     * unlisten event\n     */\n    public off(eventName: string, callback: CalllbackType) {\n        const event = this.events[eventName];\n        if (event && event.callbacks.indexOf(callback) > -1) {\n            event.unregisterCallback(callback);\n            if (event.callbacks.length === 0) {\n                delete this.events[eventName];\n            }\n        }\n    }\n}\n\n// export {DispatcherEvent, Dispatcher};\nexport default Dispatcher;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-function */\nimport {createContext} from \"react\";\nimport Dispatcher from \"../util/dispatcher\";\nimport {ColorType, LineWidthType, ShapeOutlineType, ShapeToolType, ToolType} from \"../util/toolType\";\n\nexport const ToolTypeContext = createContext({\n    type: ToolType.PEN,\n    setType: (type: ToolType) => {}\n});\n\nexport const ShapeTypeContext = createContext({\n    type: ShapeToolType.LINE,\n    setType: (type: ShapeToolType) => {}\n});\n\nexport const ShapeOutlineContext = createContext({\n    type: ShapeOutlineType.SOLID,\n    setType: (type: ShapeOutlineType) => {}\n});\n\nexport const LineWidthContext = createContext({\n    type: LineWidthType.THIN,\n    setType: (type: LineWidthType) => {}\n});\n\nexport const ColorContext = createContext({\n    mainColor: \"black\",\n    subColor: \"white\",\n    activeColor: ColorType.MAIN,\n    setColor: (value: string) => {},\n    setActiveColor: (type: ColorType) => {}\n});\n\nexport const DispatcherContext = createContext({\n    dispatcher: new Dispatcher()\n});\n","import React from \"react\";\nimport CreateTwoTone from \"@material-ui/icons/CreateTwoTone\";\nimport FormatColorFillTwoTone from \"@material-ui/icons/FormatColorFillTwoTone\";\nimport ColorizeTwoToneIcon from \"@material-ui/icons/ColorizeTwoTone\";\n// import SearchTwoToneIcon from \"@material-ui/icons/SearchTwoTone\";\n// import TextFieldsIcon from \"@material-ui/icons/TextFields\";\nimport {ToolType} from \"../../../util/toolType\";\nimport {ToolTypeContext} from \"../../../context\";\nimport \"./index.less\";\n\nconst selectedToolClass = \"selected-tool\";\nexport interface ToolPanelProps {\n    className?: string;\n}\n\nconst ToolPanel: React.FC<ToolPanelProps> = (props) => {\n    const {className} = props;\n    return (\n        <div className={className ? `toolpanel ${className}` : \"toolpanel\"}>\n            <ToolTypeContext.Consumer>\n                {\n                    ({type, setType}) => (\n                        <>\n                            <div className=\"top\">\n                                <span title=\"铅笔\">\n                                    <CreateTwoTone className={type === ToolType.PEN ? `tool-item ${selectedToolClass}` : \"tool-item\"} onClick={() => {setType(ToolType.PEN)}} />\n                                </span>\n                                <span title=\"橡皮擦\">\n                                    <img src=\"./icon/eraser.svg\" className={type === ToolType.ERASER ? `tool-item ${selectedToolClass}` : \"tool-item\"} onClick={() => {setType(ToolType.ERASER)}} />\n                                </span>\n                                <span title=\"填充\">\n                                    <FormatColorFillTwoTone className={type === ToolType.COLOR_FILL ? `tool-item ${selectedToolClass}` : \"tool-item\"} onClick={() => {setType(ToolType.COLOR_FILL)}} />\n                                </span>\n                            </div>\n                            <div className=\"down\">\n                                <span title=\"颜色选取器\">\n                                    <ColorizeTwoToneIcon className={type === ToolType.COLOR_EXTRACT ? `tool-item ${selectedToolClass}` : \"tool-item\"} onClick={() => {setType(ToolType.COLOR_EXTRACT)}} />\n                                </span>\n                                {/* <span title=\"文字\">\n                                    <TextFieldsIcon className={type === ToolType.TEXT ? `tool-item ${selectedToolClass}` : \"tool-item\"} onClick={() => {setType(ToolType.TEXT)}} />\n                                </span>\n                                <span title=\"放大镜\">\n                                    <SearchTwoToneIcon className={type === ToolType.MAGNIFYING ? `tool-item ${selectedToolClass}` : \"tool-item\"} onClick={() => {setType(ToolType.MAGNIFYING)}} />\n                                </span> */}\n                            </div>\n                        </>\n                    )\n                }\n            </ToolTypeContext.Consumer>\n            <div className=\"title\">工具</div>\n        </div>\n    );\n};\n\nexport default ToolPanel;\n","import React from \"react\";\nimport {useContext} from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport {ShapeOutlineContext, ShapeTypeContext, ToolTypeContext} from \"../../../context\";\nimport {ShapeOutlineType, ShapeToolType, ToolType} from \"../../../util/toolType\";\nimport \"./index.less\";\n\nconst selectedShapeClass = \"selected-shape\";\n\nconst shapes = [\n    {\n        type: ShapeToolType.LINE,\n        img: \"./icon/shape_line.svg\",\n        title: \"直线\"\n    },\n    {\n        type: ShapeToolType.RECT,\n        img: \"./icon/shape_rect.svg\",\n        title: \"矩形\"\n    },\n    {\n        type: ShapeToolType.CIRCLE,\n        img: \"./icon/shape_circle.svg\",\n        title: \"圆（椭圆）\"\n    },\n    {\n        type: ShapeToolType.RHOMBUS,\n        img: \"./icon/shape_rhombus.svg\",\n        title: \"菱形\"\n    },\n    {\n        type: ShapeToolType.TRIANGLE,\n        img: \"./icon/shape_triangle.svg\",\n        title: \"三角形\"\n    },\n    {\n        type: ShapeToolType.PENTAGON,\n        img: \"./icon/shape_pentagon.svg\",\n        title: \"五边形\"\n    },\n    {\n        type: ShapeToolType.SEXANGLE,\n        img: \"./icon/shape_sexangle.svg\",\n        title: \"六边形\"\n    },\n    {\n        type: ShapeToolType.ARROW_TOP,\n        img: \"./icon/shape_arrowtop.svg\",\n        title: \"上箭头\"\n    },\n    {\n        type: ShapeToolType.ARROW_RIGHT,\n        img: \"./icon/shape_arrowright.svg\",\n        title: \"右箭头\"\n    },\n    {\n        type: ShapeToolType.ARROW_DOWN,\n        img: \"./icon/shape_arrowdown.svg\",\n        title: \"下箭头\"\n    },\n    {\n        type: ShapeToolType.ARROW_LEFT,\n        img: \"./icon/shape_arrowleft.svg\",\n        title: \"左箭头\"\n    },\n    {\n        type: ShapeToolType.FOUR_STAR,\n        img: \"./icon/shape_fourstar.svg\",\n        title: \"四角星\"\n    }\n];\n\ninterface ShapePanelProps {\n    className?: string;\n}\n\nconst ShapePanel: React.FC<ShapePanelProps> = (props) => {\n    const {className} = props;\n    const toolTypeContex = useContext(ToolTypeContext);\n    const shapeOutlineContext = useContext(ShapeOutlineContext);\n\n    return (\n        <div className={className ? `shapepanel ${className}` : \"shapepanel\"}>\n            <div className=\"shape-container\">\n                <div className=\"shape-content\">\n                    <ShapeTypeContext.Consumer>\n                        {\n                            ({type, setType}) => shapes.map((shape) => (\n                                <img\n                                    src={shape.img}\n                                    key={shape.img}\n                                    title={shape.title}\n                                    className={type === shape.type && toolTypeContex.type === ToolType.SHAPE ? `shape-item ${selectedShapeClass}` : \"shape-item\"}\n                                    onClick={() => setType(shape.type)}\n                                />\n                            ))\n                        }\n                    </ShapeTypeContext.Consumer>\n                </div>\n                <div className=\"shape-style\">\n                    <FormControl variant=\"outlined\" disabled={toolTypeContex.type === ToolType.SHAPE ? false : true}>\n                        <InputLabel>轮廓</InputLabel>\n                        <Select\n                            value={shapeOutlineContext.type}\n                            onChange={(event) => shapeOutlineContext.setType(event.target.value as ShapeOutlineType)}\n                            label=\"轮廓\"\n                        >\n                            <MenuItem value={ShapeOutlineType.SOLID}>实线</MenuItem>\n                            <MenuItem value={ShapeOutlineType.DOTTED}>虚线</MenuItem>\n                        </Select>\n                    </FormControl>\n                </div>\n            </div>\n            <div className=\"title\">形状</div>\n        </div>\n    );\n};\n\nexport default ShapePanel;\n","import React from \"react\";\nimport Popover from \"@material-ui/core/Popover\";\nimport \"./index.less\";\nimport {useState} from \"react\";\nimport {LineWidthType} from \"../../../util/toolType\";\nimport {useContext} from \"react\";\nimport {LineWidthContext} from \"../../../context\";\n\ninterface ThickSelectorProps {\n    className?: string;\n}\n\nconst thicks = [\n    {\n        type: LineWidthType.THIN,\n        img: \"./icon/thickline1.svg\",\n        title: \"1px\"\n    },\n    {\n        type: LineWidthType.MIDDLE,\n        img: \"./icon/thickline2.svg\",\n        title: \"2px\"\n    },\n    {\n        type: LineWidthType.BOLD,\n        img: \"./icon/thickline3.svg\",\n        title: \"3px\"\n    },\n    {\n        type: LineWidthType.MAXBOLD,\n        img: \"./icon/thickline4.svg\",\n        title: \"4px\"\n    }\n];\n\nconst selectedClass = \"selected-item\";\n\nconst ThickSelector: React.FC<ThickSelectorProps> = (props) => {\n    const {className} = props;\n    const [open, setOpen] = useState<boolean>(false);\n    const [anchorEle, setAnchorEle] = useState<HTMLImageElement>();\n    const lineWidthContext = useContext(LineWidthContext);\n\n    const onOpen: React.MouseEventHandler<HTMLImageElement> = (event) => {\n        setAnchorEle(event.currentTarget);\n        setOpen(true);\n    };\n\n    const onClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div className={className ? `thickselector ${className}` : \"thickselector\"}>\n            <img className=\"thickline\" src=\"./icon/thickness.svg\" onClick={onOpen} />\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorEl={anchorEle}\n                anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"left\",\n                }}\n            >\n                {\n                    thicks.map((thick) => (\n                        <img\n                            className={thick.type === lineWidthContext.type ? `thick-item ${selectedClass}` : \"thick-item\"}\n                            src={thick.img}\n                            key={thick.img}\n                            title={thick.title}\n                            onClick={() => {\n                                lineWidthContext.setType(thick.type);\n                                setOpen(false);\n                            }}\n                        />\n                    ))\n                }\n            </Popover>\n            <div className=\"title\">粗细</div>\n        </div>\n    );\n};\n\nexport default ThickSelector;\n","import React from \"react\";\nimport {useContext} from \"react\";\nimport {ColorContext} from \"../../../context\";\nimport {ColorType} from \"../../../util/toolType\";\nimport {ColorPicker, createColor} from \"material-ui-color\";\nimport \"./index.less\";\nimport {useState} from \"react\";\nimport {useEffect} from \"react\";\n\ninterface ColorPanelProps {\n    className?: string;\n}\n\nconst colors = [\n    {\n        title: \"黑色\",\n        value: \"#000000ff\"\n    },\n    {\n        title: \"灰色-50%\",\n        value: \"#7f7f7fff\"\n    },\n    {\n        title: \"深红色\",\n        value: \"#880015ff\"\n    },\n    {\n        title: \"红色\",\n        value: \"#ed1c24ff\"\n    },\n    {\n        title: \"橙色\",\n        value: \"#ff7f27ff\"\n    },\n    {\n        title: \"黄色\",\n        value: \"#fff200ff\"\n    },\n    {\n        title: \"绿色\",\n        value: \"#22b14cff\"\n    },\n    {\n        title: \"青绿色\",\n        value: \"#00a2e8ff\"\n    },\n    {\n        title: \"蓝青色\",\n        value: \"#3f48ccff\"\n    },\n    {\n        title: \"紫色\",\n        value: \"#a349a4ff\"\n    },\n    {\n        title: \"白色\",\n        value: \"#ffffffff\"\n    },\n    {\n        title: \"灰色-25%\",\n        value: \"#c3c3c3ff\"\n    },\n    {\n        title: \"褐色\",\n        value: \"#b97a57ff\"\n    },\n    {\n        title: \"玫瑰色\",\n        value: \"#ffaec9ff\"\n    },\n    {\n        title: \"金色\",\n        value: \"#ffc90eff\"\n    },\n    {\n        title: \"浅黄色\",\n        value: \"#efe4b0ff\"\n    },\n    {\n        title: \"酸橙色\",\n        value: \"#b5e61dff\"\n    },\n    {\n        title: \"青绿色\",\n        value: \"#808000ff\"\n    },\n    {\n        title: \"淡青蓝色\",\n        value: \"#99d9eaff\"\n    },\n    {\n        title: \"蓝灰色\",\n        value: \"#7092beff\"\n    },\n    {\n        title: \"淡紫色\",\n        value: \"#c8bfe7ff\"\n    }\n];\n\nconst activeColorTypeCls = \"active-color-type\";\n\nconst ColorPanel: React.FC<ColorPanelProps> = (props) => {\n    const {className} = props;\n    const [pickerColor, setPickerColor] = useState(createColor(\"#000000FF\"));\n    const colorContext = useContext(ColorContext);\n    const activeColorType = colorContext.activeColor;\n\n    useEffect(() => {\n        colorContext.setColor(`#${pickerColor.hex}`);\n    }, [pickerColor]);\n\n    return (\n        <div className={className ? `colorpanel ${className}` : \"colorpanel\"}>\n            <div className=\"content\">\n                <div className=\"color-result\">\n                    <div onClick={() => colorContext.setActiveColor(ColorType.MAIN)} className={activeColorType === ColorType.MAIN ? `main-color ${activeColorTypeCls}` : \"main-color\"}>\n                        <div className=\"color-box1\" style={{backgroundColor: colorContext.mainColor}} />\n                        <div>颜色1</div>\n                    </div>\n                    <div onClick={() => colorContext.setActiveColor(ColorType.SUB)} className={activeColorType === ColorType.SUB ? `sub-color ${activeColorTypeCls}` : \"sub-color\"}>\n                        <div className=\"color-box2\" style={{backgroundColor: colorContext.subColor}} />\n                        <div>颜色2</div>\n                    </div>\n                </div>\n                <div className=\"color-template\">\n                    {\n                        colors.map((color) => (\n                            <div onClick={() => colorContext.setColor(color.value)} key={color.value} className=\"color-template-item\" style={{backgroundColor: color.value}} />\n                        ))\n                    }\n                </div>\n                <div className=\"color-picker\">\n                    <ColorPicker value={pickerColor} hideTextfield onChange={(color) => setPickerColor(color)} />\n                    <div className=\"color-picker-title\">编辑颜色</div>\n                </div>\n            </div>\n            <div className=\"title\">颜色</div>\n        </div>\n    );\n};\n\nexport default ColorPanel;\n","export const CLEAR_EVENT = \"clear\";\nexport const REDO_EVENT = \"redo\";\nexport const UNDO_EVENT = \"undo\";\n","import React from \"react\";\nimport ClearAllIcon from \"@material-ui/icons/ClearAll\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport \"./index.less\";\nimport {useContext} from \"react\";\nimport {DispatcherContext} from \"../../../context\";\nimport {CLEAR_EVENT, REDO_EVENT, UNDO_EVENT} from \"../../../util/dispatcher/event\";\n\nconst OtherOperator = () => {\n    const dispatcherContext = useContext(DispatcherContext);\n\n    const clearCanvas = () => {\n        dispatcherContext.dispatcher.dispatch(CLEAR_EVENT);\n    };\n    const undo = () => {\n        dispatcherContext.dispatcher.dispatch(UNDO_EVENT);\n    };\n    const redo = () => {\n        dispatcherContext.dispatcher.dispatch(REDO_EVENT);\n    };\n\n    return (\n        <div className=\"otherOperator\">\n            <div className=\"operator-content\">\n                <span title=\"清空画布\" className=\"operator-item\">\n                    <ClearAllIcon onClick={clearCanvas} />\n                </span>\n                <span title=\"后退\" className=\"operator-item\">\n                    <UndoIcon onClick={undo} />\n                </span>\n                <span title=\"前进\" className=\"operator-item\">\n                    <RedoIcon onClick={redo} />\n                </span>\n            </div>\n            <span className=\"title\">其他</span>\n        </div>\n    );\n};\n\nexport default OtherOperator;\n","import React from \"react\";\nimport \"./index.less\";\nimport ToolPanel from \"./tool\";\nimport ShapePanel from \"./shape\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ThickSelector from \"./thickSelector\";\nimport ColorPanel from \"./colorPanel\";\nimport OtherOperator from \"./other\";\n\nconst Toolbar = (): JSX.Element => {\n    return (\n        <div className=\"toolbar\">\n            <ToolPanel className=\"toolbar-item\" />\n            <Divider className=\"divider\" orientation=\"vertical\" flexItem />\n            <ShapePanel className=\"toolbar-item\" />\n            <Divider className=\"divider\" orientation=\"vertical\" flexItem />\n            <ThickSelector className=\"toolbar-item\" />\n            <Divider className=\"divider\" orientation=\"vertical\" flexItem />\n            <ColorPanel className=\"toolbar-item\" />\n            <Divider className=\"divider\" orientation=\"vertical\" flexItem />\n            <OtherOperator />\n            <Divider className=\"divider\" orientation=\"vertical\" flexItem />\n        </div>\n    );\n};\n\nexport default Toolbar;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nexport interface Point {\n    x: number;\n    y: number;\n}\n\nexport const getMousePos = (canvas: HTMLCanvasElement, event: MouseEvent): Point => {\n    const rect = canvas.getBoundingClientRect();\n    return {\n        x: event.clientX - rect.left,\n        y: event.clientY - rect.top\n    };\n};\n\nexport const getTouchPos = (canvas: HTMLCanvasElement, event: TouchEvent): Point => {\n    return {\n        x: event.touches[0].pageX - canvas.offsetLeft,\n        y: event.touches[0].pageY - canvas.offsetTop\n    }\n};\n\nexport const rgbToHex = (r: number, g: number, b: number, a?: number) => {\n    const componentToHex = (c: number) => {\n        const hex = c.toString(16);\n        return hex.length == 1 ? \"0\" + hex : hex;\n    }\n\n    const res = \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n\n    return a ? res + componentToHex(a) : res;\n};\n\nexport const hexToRgb = (hex: string) => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n        a: parseInt(result[4], 16)\n    } : null;\n};\n\nexport const getPixelColorOnCanvas = (ctx: CanvasRenderingContext2D, x: number, y: number): string => {\n    const p = ctx.getImageData(x, y, 1, 1).data;\n\n    return rgbToHex(p[0], p[1], p[2], p[3]);\n};\n\nexport const updateImageData = (origin: ImageData, data: ImageData, fillData: [number, number, number, number]) => {\n    for (let row = 0; row < data.height; row++) {\n        for (let col = 0; col < data.width; col++) {\n            const index = row * data.width * 4 + col * 4;\n            const r1 = data.data[index];\n            const g1 = data.data[index + 1];\n            const b1 = data.data[index + 2];\n            const a1 = data.data[index + 3];\n\n            const r2 = origin.data[index];\n            const g2 = origin.data[index + 1];\n            const b2 = origin.data[index + 2];\n            const a2 = origin.data[index + 3];\n\n            const equalOrigin = r1 === r2 && g1 === g2 && b1 === b2 && a1 === a2;\n            const equalFilling = r1 === fillData[0] && g1 === fillData[1] && b1 === fillData[2] && a1 === fillData[3];\n            if (!(equalOrigin || equalFilling)) {\n                data.data[index] = fillData[0];\n                data.data[index + 1] = fillData[1];\n                data.data[index + 2] = fillData[2];\n                data.data[index + 3] = fillData[3];\n            }\n        }\n    }\n\n    return data;\n}\n\nexport default class Tool {\n    /**\n     * 线宽\n     */\n    public static lineWidthFactor = 1;\n    /**\n     * 主色\n     */\n    public static mainColor = \"black\";\n    /**\n     * 副色\n     */\n    public static subColor = \"white\";\n\n    public static ctx: CanvasRenderingContext2D;\n\n    public onMouseDown(event: MouseEvent): void {\n        //\n    }\n\n    public onMouseMove(event: MouseEvent): void {\n        //\n    }\n\n    public onMouseUp(event: MouseEvent): void {\n        //\n    }\n\n    public onTouchStart(event: TouchEvent): void {\n        //\n    }\n\n    public onTouchMove(event: TouchEvent): void {\n        //\n    }\n\n    public onTouchEnd(event: TouchEvent): void {\n        //\n    }\n}\n","import {ColorType} from \"../toolType\";\nimport Tool, {Point, getMousePos, getTouchPos, hexToRgb, updateImageData} from \"./tool\";\nclass Pen extends Tool {\n    protected lineWidthBase = 1;\n    protected drawColorType = ColorType.MAIN;\n    private mouseDown = false;\n    private saveImageData?: ImageData;\n    private previousPos: Point = {\n        x: 0,\n        y: 0\n    };\n    private operateStart(pos: Point) {\n        if (!Tool.ctx) return;\n\n        this.saveImageData = Tool.ctx.getImageData(0, 0, Tool.ctx.canvas.width, Tool.ctx.canvas.height);\n\n        this.mouseDown = true;\n        Tool.ctx.lineWidth = Tool.lineWidthFactor * this.lineWidthBase;\n        Tool.ctx.strokeStyle = this.drawColorType === ColorType.MAIN ? Tool.mainColor : Tool.subColor;\n        Tool.ctx.lineJoin = \"round\";\n        Tool.ctx.lineCap = \"round\";\n        Tool.ctx.beginPath();\n        this.previousPos = pos;\n    }\n    private operateMove(pos: Point) {\n        if (this.mouseDown) {\n            Tool.ctx.moveTo(this.previousPos.x, this.previousPos.y);\n            const c = 0.5 * (this.previousPos.x + pos.x);\n            const d = 0.5 * (this.previousPos.y + pos.y);\n            Tool.ctx.quadraticCurveTo(c, d, pos.x, pos.y);\n            Tool.ctx.stroke();\n            this.previousPos = pos;\n        }\n    }\n    private operateEnd() {\n        if (this.mouseDown) {\n            Tool.ctx.closePath();\n            this.mouseDown = false;\n\n            let imageData = Tool.ctx.getImageData(0, 0, Tool.ctx.canvas.width, Tool.ctx.canvas.height);\n            const colorRgb = hexToRgb(this.drawColorType === ColorType.MAIN ? Tool.mainColor : Tool.subColor);\n            if (colorRgb && this.saveImageData) {\n                imageData = updateImageData(this.saveImageData, imageData, [colorRgb.r, colorRgb.g, colorRgb.b, colorRgb.a]);\n\n                Tool.ctx.putImageData(imageData, 0, 0);\n            }\n        }\n    }\n    public onMouseDown(event: MouseEvent): void {\n        event.preventDefault();\n\n        const mousePos = getMousePos(Tool.ctx.canvas, event);\n\n        this.operateStart(mousePos);\n    }\n\n    public onMouseUp(event: MouseEvent): void {\n        event.preventDefault();\n        this.operateEnd();\n    }\n\n    public onMouseMove(event: MouseEvent): void {\n        event.preventDefault();\n        const mousePos = getMousePos(Tool.ctx.canvas, event);\n        this.operateMove(mousePos);\n    }\n\n    public onTouchStart(event: TouchEvent): void {\n        if (event.cancelable) {\n            event.preventDefault();\n        }\n        const touchPos = getTouchPos(event.target as HTMLCanvasElement, event);\n        this.operateStart(touchPos);\n    }\n\n    public onTouchMove(event: TouchEvent): void {\n        if (event.cancelable) {\n            event.preventDefault();\n        }\n        const touchPos = getTouchPos(event.target as HTMLCanvasElement, event);\n        this.operateMove(touchPos);\n    }\n\n    public onTouchEnd(event: TouchEvent): void {\n        if (event.cancelable) {\n            event.preventDefault();\n        }\n        this.operateEnd();\n    }\n}\n\nexport default Pen;\n","import Pen from \"./pen\";\nimport {ColorType} from \"../toolType\";\n\nclass Eraser extends Pen {\n    protected lineWidthBase = 3;\n    protected drawColorType = ColorType.SUB;\n}\n\nexport default Eraser;\n","import Tool, {getPixelColorOnCanvas, getMousePos, getTouchPos} from \"./tool\";\n\nclass ColorExtract extends Tool {\n    private setColor: (color: string) => void;\n\n    /**\n     * @param setColor 设置提取后的颜色\n     */\n    public constructor(setColor: (color: string) => void) {\n        super();\n        this.setColor = setColor;\n    }\n\n    private operateStart(pos: {x: number; y: number}) {\n        const color = getPixelColorOnCanvas(Tool.ctx, pos.x, pos.y);\n        this.setColor(color);\n    }\n    public onMouseDown(event: MouseEvent): void {\n        event.preventDefault();\n        const mousepos = getMousePos(Tool.ctx.canvas, event);\n        this.operateStart(mousepos);\n    }\n\n    public onTouchStart(event: TouchEvent): void {\n        if (event.cancelable) {\n            event.preventDefault();\n        }\n        const canvas = event.target as HTMLCanvasElement;\n        const touchPos = getTouchPos(canvas, event);\n\n        this.operateStart(touchPos);\n    }\n}\n\nexport default ColorExtract;\n","import Tool, {getMousePos, getTouchPos, Point} from \"./tool\";\nimport Color from \"color\";\n\n/**\n * 高效率的填充算法\n * 参考地址: http://www.williammalone.com/articles/html5-canvas-javascript-paint-bucket-tool/\n */\nconst efficentFloodFill = (ctx: CanvasRenderingContext2D, startX: number, startY: number, fillColor: [number, number, number]) => {\n    // 保证 startX 和 startY 是正整数\n    // 经测试，在触屏设备中 startX 和 startY 可能是小数，造成填充功能无法正确填充\n    startX = Math.round(startX);\n    startY = Math.round(startY);\n    const pixelStack: [number, number][] = [[Math.round(startX), Math.round(startY)]];\n    const canvasWidth = ctx.canvas.width, canvasHeight = ctx.canvas.height;\n    const startPos = (startY * canvasWidth + startX) * 4;\n    const colorLayer = ctx.getImageData(0, 0, canvasWidth, canvasHeight);\n    const startColor: [number, number, number] = [colorLayer.data[startPos], colorLayer.data[startPos + 1], colorLayer.data[startPos + 2]];\n    \n    if (startColor[0] === fillColor[0] && startColor[1] === fillColor[1] && startColor[2] === fillColor[2]) return;\n\n    while (pixelStack.length > 0) {\n        const newPos = pixelStack.pop() as [number, number];\n        \n        const x = newPos[0];\n        let y = newPos[1];\n        \n        let pixelPos = (y * canvasWidth + x) * 4;\n        while (y-- >= 0 && matchColor(colorLayer, pixelPos, startColor)) {\n            pixelPos -= canvasWidth * 4;\n        }\n        pixelPos += canvasWidth * 4;\n        ++y;\n\n        let reachLeft = false, reachRight = false;\n        while (y++ < canvasHeight - 1 && matchColor(colorLayer, pixelPos, startColor)) {\n            fillPixel(colorLayer, pixelPos, fillColor);\n            if (x > 0) {\n                if (matchColor(colorLayer, pixelPos - 4, startColor)) {\n                    if (!reachLeft) {\n                        pixelStack.push([x - 1, y]);\n                        reachLeft = true;\n                    }\n                } else if (reachLeft) {\n                    reachLeft = false;\n                }\n            }\n\n            if (x < canvasWidth - 1) {\n                if (matchColor(colorLayer, pixelPos + 4, startColor)) {\n                    if (!reachRight) {\n                        pixelStack.push([x + 1, y]);\n                        reachRight = true;\n                    }\n                } else if (reachRight) {\n                    reachRight = false;\n                }\n            }\n\n            pixelPos += canvasWidth * 4;\n        }\n    }\n\n    ctx.putImageData(colorLayer, 0, 0);\n};\n\n/**\n * 判断两个位置的像素颜色是否相同\n */\nconst matchColor = (colorLayer: ImageData, pixelPos: number, color: [number, number, number]) => {\n    const r = colorLayer.data[pixelPos];\n    const g = colorLayer.data[pixelPos + 1];\n    const b = colorLayer.data[pixelPos + 2];\n\n    return (r === color[0] && g === color[1] && b === color[2]);\n};\n\n/**\n * 修改指定ImageData的指定位置像素颜色\n */\nconst fillPixel = (colorLayer: ImageData, pixelPos: number, color: [number, number, number]) => {\n    colorLayer.data[pixelPos] = color[0];\n    colorLayer.data[pixelPos + 1] = color[1];\n    colorLayer.data[pixelPos + 2] = color[2];\n\n    return colorLayer;\n}\n\nclass ColorFill extends Tool {\n    private operateStart(pos: Point) {\n        const color = new Color(Tool.mainColor);\n        efficentFloodFill(Tool.ctx, pos.x, pos.y, [color.red(), color.green(), color.blue()]);\n    }\n    public onMouseDown(event: MouseEvent): void {\n        event.preventDefault();\n        const mousepos = getMousePos(Tool.ctx.canvas, event);\n        this.operateStart(mousepos);\n    }\n\n    public onTouchStart(event: TouchEvent): void {\n        if (event.cancelable) {\n            event.preventDefault();\n        }\n        const touchpos = getTouchPos(event.target as HTMLCanvasElement, event);\n        this.operateStart(touchpos);\n    }\n}\n\nexport default ColorFill;\n","import {ShapeToolType} from \"../toolType\";\nimport Tool, {Point, getMousePos, getTouchPos, hexToRgb, updateImageData} from \"./tool\";\n\n/**\n * 根据形状类型，获取要绘制的形状的顶点(圆形，返回圆心)\n * @param type shape type\n * @param sx x coord of start\n * @param sy y coord of start\n * @param ex x coord of end\n * @param ey y coord of end\n */\nconst getVertexs = (type: ShapeToolType, sx: number, sy: number, ex: number, ey: number): Point[] => {\n    const points: Point[] = [];\n    const mx = 0.5 * (sx + ex), my = 0.5 * (sy + ey);\n\n    switch (type) {\n        case ShapeToolType.LINE:\n            points.push({x: sx, y: sy});\n            points.push({x: ex, y: ey});\n            break;\n        case ShapeToolType.RECT:\n            points.push({x: sx, y: sy});\n            points.push({x: ex, y: sy});\n            points.push({x: ex, y: ey});\n            points.push({x: sx, y: ey});\n            break;\n        case ShapeToolType.CIRCLE:\n            points.push({x: 0.5 * (sx + ex), y: 0.5 * (sy + ey)});\n            break;\n        case ShapeToolType.RHOMBUS:\n            points.push({x: mx, y: sy});\n            points.push({x: ex, y: my});\n            points.push({x: mx, y: ey});\n            points.push({x: sx, y: my});\n            break;\n        case ShapeToolType.TRIANGLE:\n            points.push({x: mx, y: sy});\n            points.push({x: sx, y: ey});\n            points.push({x: ex, y: ey});\n            break;\n        case ShapeToolType.PENTAGON:\n            points.push({x: mx, y: sy});\n            points.push({x: ex, y: my});\n            points.push({x: 0.5 * (mx + ex), y: ey});\n            points.push({x: 0.5 * (mx + sx), y: ey});\n            points.push({x: sx, y: my});\n            break;\n        case ShapeToolType.SEXANGLE:\n            points.push({x: mx, y: sy});\n            points.push({x: ex, y: 0.5 * (sy + my)});\n            points.push({x: ex, y: 0.5 * (ey + my)});\n            points.push({x: mx, y: ey});\n            points.push({x: sx, y: 0.5 * (ey + my)});\n            points.push({x: sx, y: 0.5 * (sy + my)});\n            break;\n        case ShapeToolType.ARROW_TOP:\n            points.push({x: mx, y: sy});\n            points.push({x: ex, y: my});\n            points.push({x: ex - 1 / 3 * (ex - sx), y: my});\n            points.push({x: ex - 1 / 3 * (ex - sx), y: ey});\n            points.push({x: sx + 1 / 3 * (ex - sx), y: ey});\n            points.push({x: sx + 1 / 3 * (ex - sx), y: my});\n            points.push({x: sx, y: my});\n            break;\n        case ShapeToolType.ARROW_RIGHT:\n            points.push({x: ex, y: my});\n            points.push({x: mx, y: ey});\n            points.push({x: mx, y: ey - 1 / 3 * (ey - sy)});\n            points.push({x: sx, y: ey - 1 / 3 * (ey - sy)});\n            points.push({x: sx, y: sy + 1 / 3 * (ey - sy)});\n            points.push({x: mx, y: sy + 1 / 3 * (ey - sy)});\n            points.push({x: mx, y: sy});\n            break;\n        case ShapeToolType.ARROW_DOWN:\n            points.push({x: mx, y: ey});\n            points.push({x: sx, y: my});\n            points.push({x: sx + 1 / 3 * (ex - sx), y: my});\n            points.push({x: sx + 1 / 3 * (ex - sx), y: sy});\n            points.push({x: ex - 1 / 3 * (ex - sx), y: sy});\n            points.push({x: ex - 1 / 3 * (ex - sx), y: my});\n            points.push({x: ex, y: my});\n            break;\n        case ShapeToolType.ARROW_LEFT:\n            points.push({x: sx, y: my});\n            points.push({x: mx, y: sy});\n            points.push({x: mx, y: sy + 1 / 3 * (ey - sy)});\n            points.push({x: ex, y: sy + 1 / 3 * (ey - sy)});\n            points.push({x: ex, y: ey - 1 / 3 * (ey - sy)});\n            points.push({x: mx, y: ey - 1 / 3 * (ey - sy)});\n            points.push({x: mx, y: ey});\n            break;\n        case ShapeToolType.FOUR_STAR:\n            const offsetX = 0.125 * (ex - sx), offsetY = 0.125 * (ey - sy);\n            points.push({x: mx, y: sy});\n            points.push({x: mx + offsetX, y: my - offsetY});\n            points.push({x: ex, y: my});\n            points.push({x: mx + offsetX, y: my + offsetY});\n            points.push({x: mx, y: ey});\n            points.push({x: mx - offsetX, y: my + offsetY});\n            points.push({x: sx, y: my});\n            points.push({x: mx - offsetX, y: my - offsetY});\n            break;\n        default:\n            break;\n    }\n    return points;\n};\n\nclass Shape extends Tool {\n    private type: ShapeToolType;\n    private saveImageData?: ImageData;\n    private isMouseDown = false;\n    private mouseDownPos = {x: 0, y: 0};\n    private lineWidthBase = 1;\n    public isDashed = false;\n    private dashLineStyle = [10, 10];\n    public constructor(type: ShapeToolType, dashed = false) {\n        super();\n        this.type = type;\n        this.isDashed = dashed;\n    }\n\n    public setType(type: ShapeToolType) {\n        this.type = type;\n    }\n\n    private operateStart(pos: {x: number; y: number}) {\n        this.saveImageData = Tool.ctx.getImageData(0, 0, Tool.ctx.canvas.width, Tool.ctx.canvas.height);\n        this.isMouseDown = true;\n        this.mouseDownPos = pos;\n\n        Tool.ctx.strokeStyle = Tool.mainColor;\n        Tool.ctx.lineWidth = Tool.lineWidthFactor * this.lineWidthBase;\n        Tool.ctx.fillStyle = Tool.subColor;\n        if (this.isDashed) {\n            Tool.ctx.setLineDash(this.dashLineStyle);\n        }\n    }\n\n    private operateMove(pos: {x: number; y: number}) {\n        if (this.isMouseDown && this.saveImageData) {\n            const ctx = Tool.ctx;\n            ctx.clearRect(0, 0, Tool.ctx.canvas.width, Tool.ctx.canvas.height);\n\n            ctx.putImageData(this.saveImageData, 0, 0);\n            const vertexs: Point[] = getVertexs(this.type, this.mouseDownPos.x, this.mouseDownPos.y, pos.x, pos.y);\n\n            if (this.type === ShapeToolType.CIRCLE) {\n                ctx.beginPath();\n                ctx.ellipse(vertexs[0].x, vertexs[0].y, Math.abs(0.5 * (pos.x - this.mouseDownPos.x)), Math.abs(0.5 * (pos.y - this.mouseDownPos.y)), 0, 0, Math.PI * 2);\n                ctx.stroke();\n            } else {\n                ctx.beginPath();\n                ctx.moveTo(vertexs[0].x, vertexs[0].y);\n                for (let i = 1; i < vertexs.length; i++) {\n                    ctx.lineTo(vertexs[i].x, vertexs[i].y);\n                }\n                ctx.closePath();\n                ctx.stroke();\n            }\n        }\n    }\n    private operateEnd() {\n        Tool.ctx.setLineDash([]);\n\n        let imageData = Tool.ctx.getImageData(0, 0, Tool.ctx.canvas.width, Tool.ctx.canvas.height);\n\n        const colorRgb = hexToRgb(Tool.mainColor);\n        if (colorRgb && this.saveImageData) {\n            imageData = updateImageData(this.saveImageData, imageData, [colorRgb.r, colorRgb.g, colorRgb.b, colorRgb.a]);\n\n            Tool.ctx.putImageData(imageData, 0, 0);\n        }\n        \n        this.isMouseDown = false;\n        this.saveImageData = undefined;\n    }\n\n    public onMouseDown(event: MouseEvent): void {\n        event.preventDefault();\n        const mousePos = getMousePos(Tool.ctx.canvas, event);\n        this.operateStart(mousePos);\n    }\n\n    public onMouseMove(event: MouseEvent): void {\n        event.preventDefault();\n        const mousePos = getMousePos(Tool.ctx.canvas, event);\n        this.operateMove(mousePos);\n    }\n\n    public onMouseUp(event: MouseEvent): void {\n        event.preventDefault();\n        this.operateEnd();\n    }\n\n    public onTouchStart(event: TouchEvent): void {\n        if (event.cancelable) {\n            event.preventDefault();\n        }\n        const canvas = event.target as HTMLCanvasElement;\n        const touchPos = getTouchPos(canvas, event);\n\n        this.operateStart(touchPos);\n    }\n\n    public onTouchMove(event: TouchEvent): void {\n        if (event.cancelable) {\n            event.preventDefault();\n        }\n        const canvas = event.target as HTMLCanvasElement;\n        const touchPos = getTouchPos(canvas, event);\n\n        this.operateMove(touchPos);\n    }\n\n    public onTouchEnd(event: TouchEvent): void {\n        if (event.cancelable) {\n            event.preventDefault();\n        }\n        this.operateEnd();\n    }\n}\n\nexport default Shape;\n","/**\n * 使用两个栈实现canvas前进后退动作\n */\nclass Snapshot {\n    private imageData1: ImageData[] = [];\n    private imageData2: ImageData[] = [];\n    public add(imageData: ImageData) {\n        this.imageData1.push(imageData);\n    }\n    public get current() {\n        return this.imageData1[this.imageData1.length - 1];\n    }\n    public back() {\n        if (this.imageData1.length > 1) {\n            const imageData = this.imageData1.pop() as ImageData;\n            this.imageData2.push(imageData);\n        }\n        \n        return this.imageData1.length > 0 ? this.imageData1[this.imageData1.length - 1] : null;\n    }\n\n    public forward() {\n        if (this.imageData2.length > 0) {\n            const imageData = this.imageData2.pop() as ImageData;\n            this.imageData1.push(imageData);\n        }\n        return this.imageData1.length > 0 ? this.imageData1[this.imageData1.length - 1] : null;\n    }\n}\n\nexport default Snapshot;\n","import React from \"react\";\nimport \"./index.less\";\nimport {useEffect} from \"react\";\nimport {useRef} from \"react\";\nimport {LineWidthType, ShapeOutlineType, ShapeToolType, ToolType} from \"../../util/toolType\";\nimport {FC} from \"react\";\nimport {useState} from \"react\";\nimport {Pen, Tool, Eraser, ColorExtract, ColorFill} from \"../../util/tool\";\nimport Shape from \"../../util/tool/shape\";\nimport {useContext} from \"react\";\nimport {DispatcherContext} from \"../../context\";\nimport {CLEAR_EVENT, REDO_EVENT, UNDO_EVENT} from \"../../util/dispatcher/event\";\nimport SnapShot from \"../../util/snapshot\";\nimport Snapshot from \"../../util/snapshot\";\n\ninterface CanvasProps {\n    toolType: ToolType;\n    shapeType: ShapeToolType;\n    shapeOutlineType: ShapeOutlineType;\n    lineWidthType: LineWidthType;\n    mainColor: string;\n    subColor: string;\n    setColor: (value: string) => void;\n}\n\nconst Canvas: FC<CanvasProps> = (props) => {\n    const {toolType, lineWidthType, mainColor, subColor, setColor, shapeType, shapeOutlineType} = props;\n    const [tool, setTool] = useState<Tool>();\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    const dispatcherContext = useContext(DispatcherContext);\n    const [snapshot] = useState<SnapShot>(new Snapshot());\n\n    useEffect(() => {\n        switch (toolType) {\n            case ToolType.PEN:\n                setTool(new Pen());\n                break;\n            case ToolType.ERASER:\n                setTool(new Eraser());\n                break;\n            case ToolType.COLOR_EXTRACT:\n                setTool(new ColorExtract(setColor));\n                break;\n            case ToolType.COLOR_FILL:\n                setTool(new ColorFill());\n                break;\n            case ToolType.SHAPE:\n                setTool(new Shape(shapeType, shapeOutlineType === ShapeOutlineType.DOTTED));\n                break;\n            default:\n                break;\n        }\n    }, [toolType, shapeType]);\n\n    useEffect(() => {\n        if (tool instanceof Shape) {\n            tool.isDashed = shapeOutlineType === ShapeOutlineType.DOTTED;\n        }\n    }, [shapeOutlineType]);\n\n    useEffect(() => {\n        switch (lineWidthType) {\n            case LineWidthType.THIN:\n                Tool.lineWidthFactor = 1;\n                break;\n            case LineWidthType.MIDDLE:\n                Tool.lineWidthFactor = 2;\n                break;\n            case LineWidthType.BOLD:\n                Tool.lineWidthFactor = 3;\n                break;\n            case LineWidthType.MAXBOLD:\n                Tool.lineWidthFactor = 4;\n                break;\n            default:\n                break;\n        }\n    }, [lineWidthType]);\n\n    useEffect(() => {\n        Tool.mainColor = mainColor;\n    }, [mainColor]);\n\n    useEffect(() => {\n        Tool.subColor = subColor;\n    }, [subColor]);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        if (canvas) {\n            canvas.height = canvas.clientHeight;\n            canvas.width = canvas.clientWidth;\n\n            Tool.ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n            // 初始化，将画布绘制成白色底，否则提取颜色会变成黑色\n            const ctx = canvas.getContext(\"2d\");\n            if (ctx) {\n                ctx.fillStyle = \"white\";\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n                snapshot.add(ctx.getImageData(0, 0, canvas.width, canvas.height));\n            }\n\n            // 注册清空画布事件\n            const dispatcher = dispatcherContext.dispatcher;\n            const callback = () => {\n                const ctx = canvas.getContext(\"2d\");\n                if (ctx) {\n                    ctx.fillStyle = \"white\";\n                    ctx.fillRect(0, 0, canvas.width, canvas.height);\n                }\n            };\n            dispatcher.on(CLEAR_EVENT, callback);\n\n            // 注册画布前进事件\n            const forward = () => {\n                const ctx = canvas.getContext(\"2d\");\n                if (ctx) {\n                    const imageData = snapshot.forward();\n                    if (imageData) {\n                        ctx.clearRect(0, 0, canvas.width, canvas.height);\n                        ctx.putImageData(imageData, 0, 0);\n                    }\n                }\n            };\n            dispatcher.on(REDO_EVENT, forward);\n\n            // 注册画布后退事件\n            const back = () => {\n                const ctx = canvas.getContext(\"2d\");\n                if (ctx) {\n                    const imageData = snapshot.back();\n                    if (imageData) {\n                        ctx.clearRect(0, 0, canvas.width, canvas.height);\n                        ctx.putImageData(imageData, 0, 0);\n                    }\n                }\n            };\n            dispatcher.on(UNDO_EVENT, back);\n\n            window.addEventListener(\"resize\", () => {\n                const canvasData = Tool.ctx.getImageData(0, 0, canvas.width, canvas.height);\n                canvas.height = canvas.clientHeight;\n                canvas.width = canvas.clientWidth;\n                Tool.ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                Tool.ctx.fillStyle = \"white\";\n                Tool.ctx.fillRect(0, 0, canvas.width, canvas.height);\n                Tool.ctx.putImageData(canvasData, 0, 0);\n            });\n\n            return () => {\n                dispatcher.off(CLEAR_EVENT, callback);\n            };\n        }\n    }, [canvasRef]);\n\n    const onMouseDown = (event: MouseEvent) => {\n        if (tool) {\n            tool.onMouseDown(event);\n        }\n    };\n\n    const onMouseMove = (event: MouseEvent) => {\n        if (tool) {\n            tool.onMouseMove(event);\n        }\n    };\n\n    const onMouseUp = (event: MouseEvent) => {\n        if (tool) {\n            tool.onMouseUp(event);\n\n            // 存储canvas剪影\n            snapshot.add(Tool.ctx.getImageData(0, 0, Tool.ctx.canvas.width, Tool.ctx.canvas.height));\n        }\n    };\n\n    const onTouchStart = (event: TouchEvent) => {\n        if (tool) {\n            tool.onTouchStart(event);\n        }\n    };\n\n    const onTouchMove = (event: TouchEvent) => {\n        if (tool) {\n            tool.onTouchMove(event);\n        }\n    };\n\n    const onTouchEnd = (event: TouchEvent) => {\n        if (tool) {\n            tool.onTouchEnd(event);\n        }\n\n        // 存储canvas剪影\n        snapshot.add(Tool.ctx.getImageData(0, 0, Tool.ctx.canvas.width, Tool.ctx.canvas.height));\n    };\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        if (canvas) {\n            canvas.addEventListener(\"mousedown\", onMouseDown);\n            canvas.addEventListener(\"mousemove\", onMouseMove);\n            canvas.addEventListener(\"mouseup\", onMouseUp);\n\n            canvas.addEventListener(\"touchstart\", onTouchStart);\n            canvas.addEventListener(\"touchmove\", onTouchMove);\n            canvas.addEventListener(\"touchend\", onTouchEnd);\n\n            return () => {\n                canvas.removeEventListener(\"mousedown\", onMouseDown);\n                canvas.removeEventListener(\"mousemove\", onMouseMove);\n                canvas.removeEventListener(\"mouseup\", onMouseUp);\n\n                canvas.removeEventListener(\"touchstart\", onTouchStart);\n                canvas.removeEventListener(\"touchmove\", onTouchMove);\n                canvas.removeEventListener(\"touchend\", onTouchEnd);\n            };\n        }\n    }, [canvasRef, onMouseDown, onMouseMove, onMouseUp]);\n\n\n    return (\n        <canvas className=\"canvas\" ref={canvasRef} />\n    )\n};\n\nexport default Canvas;\n","import React from \"react\";\nimport Toolbar from \"./components/toolBar\";\nimport Canvas from \"./components/canvas\";\nimport {ToolTypeContext, ShapeTypeContext, ShapeOutlineContext, LineWidthContext, ColorContext, DispatcherContext} from \"./context\";\nimport \"./app.less\";\nimport {useState} from \"react\";\nimport {ColorType, LineWidthType, ShapeOutlineType, ShapeToolType, ToolType} from \"./util/toolType\";\nimport Dispatcher from \"./util/dispatcher\";\n\nfunction App(): JSX.Element {\n    const [toolType, setToolType] = useState<ToolType>(ToolType.PEN);\n    const [shapeType, setShapeType] = useState<ShapeToolType>(ShapeToolType.LINE);\n    const [shapeOutlineType, setShapeOutlineType] = useState<ShapeOutlineType>(ShapeOutlineType.SOLID);\n    const [lineWidthType, setLineWidthType] = useState<LineWidthType>(LineWidthType.THIN);\n    const [activeColorType, setActiveColorType] = useState<ColorType>(ColorType.MAIN);\n    const [mainColor, setMainColor] = useState<string>(\"black\");\n    const [subColor, setSubColor] = useState<string>(\"white\");\n    const [dispatcher] = useState(new Dispatcher());\n\n    const setColor = (value: string) => {\n        if (activeColorType === ColorType.MAIN) {\n            setMainColor(value);\n        } else {\n            setSubColor(value);\n        }\n    };\n\n    return (\n        <ToolTypeContext.Provider value={{type: toolType, setType: setToolType}}>\n            <ShapeTypeContext.Provider value={{type: shapeType, setType: (type: ShapeToolType) => {setToolType(ToolType.SHAPE); setShapeType(type);}}}>\n                <ShapeOutlineContext.Provider value={{type: shapeOutlineType, setType: setShapeOutlineType}}>\n                    <LineWidthContext.Provider value={{type: lineWidthType, setType: setLineWidthType}}>\n                        <DispatcherContext.Provider value={{dispatcher}}>\n                            <ColorContext.Provider value={{\n                                mainColor,\n                                subColor,\n                                activeColor: activeColorType,\n                                setColor,\n                                setActiveColor: setActiveColorType\n                            }}>\n                                <div className=\"app\">\n                                    <Toolbar />\n                                    <Canvas\n                                        toolType={toolType}\n                                        shapeType={shapeType}\n                                        shapeOutlineType={shapeOutlineType}\n                                        mainColor={mainColor}\n                                        subColor={subColor}\n                                        lineWidthType={lineWidthType}\n                                        setColor={setColor}\n                                    />\n                                </div>\n                            </ColorContext.Provider>\n                        </DispatcherContext.Provider>\n                    </LineWidthContext.Provider>\n                </ShapeOutlineContext.Provider>\n            </ShapeTypeContext.Provider>\n        </ToolTypeContext.Provider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}